{"version":3,"file":"static/js/841.b77adb17.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectUser = state => state.auth.user;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* margin-bottom: 20px; */\n  width: 400px;\n  padding: 12px;\n  background-color: rgba(86, 82, 82, 0.6);\n  border: 3px solid #3f424d;\n  border-radius: 4px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 6px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: rgba(32, 33, 36, 0.28) 0px 1px 6px 0px;\n`;\n\nexport const Text = styled.p`\n  padding: 10px;\n  margin-bottom: 14px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  margin-top: 20px;\n  border-radius: 10px;\n\n  :hover {\n    background-color: #d4c6c5;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { Form, Input, Text, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    const existingContact = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      Notiflix.Report.warning(`Contact with name ${name} already exists!`);\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Text>Name</Text>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' .\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name\"\n        required\n        value={name}\n        onChange={handleNameChange}\n      />\n      <Text>Number</Text>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ \\-.\\s]?\\(?\\d{1,3}?\\)?[ \\-.\\s]?\\d{1,4}[ \\-.\\s]?\\d{1,4}[ \\-.\\s]?\\d{1,9}\"\n        title=\"Phone number\"\n        required\n        value={number}\n        onChange={handleNumberChange}\n        placeholder=\"Enter your phone number in the format ХХХ-ХХ-ХХ\"\n      />\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactItems = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactName = styled.span`\n  margin-right: 10px;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 20px;\n  margin-left: 20px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n  :hover {\n    background-color: #e0e0e0;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  ContactItems,\n  ContactName,\n  ContactNumber,\n  Button,\n} from './ContactItem.styled';\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <ContactItems>\n      <ContactName>{contact.name}</ContactName>\n      <ContactNumber>{contact.number}</ContactNumber>\n      <Button onClick={handleDelete}>Delete</Button>\n    </ContactItems>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { Loader } from '../Loader/Loader';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactItem from '../ContactItem/ContactItem';\n\nfunction ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error ? (\n        <Loader />\n      ) : (\n        filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} contact={{ id, name, number }} />\n        ))\n      )}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  border: none;\n  outline: 0px;\n  background-color: rgb(255, 255, 255);\n\n  width: 200px;\n  padding: 12px;\n  border: 3px solid #3f424d;\n  border-radius: 4px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { setContactsFilter } from 'redux/contacts/filterSlice';\nimport { Input } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setContactsFilter(event.target.value.trim()));\n  };\n\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilterChange}\n      disabled={contacts.length === 0}\n    />\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 10px;\n  margin-bottom: 14px;\n`;\n","import { HelmetProvider, Helmet } from 'react-helmet-async';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { Text } from './Contacts.styled';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n\n        <Text>Contacts</Text>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Text","_templateObject3","Button","_templateObject4","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","onSubmit","event","preventDefault","contact","find","Notiflix","concat","addContact","children","_jsx","type","pattern","title","required","value","onChange","target","placeholder","ContactItems","ContactName","ContactNumber","onClick","deleteContact","id","filteredContacts","useEffect","fetchContacts","Loader","map","ContactItem","setContactsFilter","trim","disabled","length","_Fragment","HelmetProvider","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}